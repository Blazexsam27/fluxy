[{"filePath":"D:\\fluxy\\bin\\cli.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'require' is not defined.","line":3,"column":21,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":28},{"ruleId":"no-undef","severity":2,"message":"'require' is not defined.","line":4,"column":17,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":24},{"ruleId":"no-undef","severity":2,"message":"'require' is not defined.","line":5,"column":17,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":24},{"ruleId":"no-unused-vars","severity":2,"message":"'serveDashboard' is assigned a value but never used.","line":6,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":23},{"ruleId":"no-undef","severity":2,"message":"'require' is not defined.","line":6,"column":28,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":35}],"suppressedMessages":[],"errorCount":5,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"#!/usr/bin/env node\r\n\r\nconst { program } = require(\"commander\");\r\nconst analyze = require(\"../lib/analyze\");\r\nconst process = require(\"process\");\r\nconst { serveDashboard } = require(\"../lib/server\");\r\n\r\nprogram\r\n  .command(\"analyze [path]\")\r\n  .option(\"-p, --port <port>\", \"Port to run the dashboard on\", \"8080\")\r\n  .description(\"Run code analysis on the specified project directory\")\r\n  .action((path, options) => {\r\n    const projectPath = path || \"./\";\r\n    analyze(projectPath)\r\n      .then(() => {\r\n        console.log(\"Analysis completed, starting dashboard...\", options);\r\n\r\n        // serveDashboard(options?.port);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error running analysis:\", error);\r\n      });\r\n  });\r\n\r\nprogram.parse(process.argv);\r\n","usedDeprecatedRules":[]},{"filePath":"D:\\fluxy\\config\\parseReport.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'require' is not defined.","line":1,"column":16,"nodeType":"Identifier","messageId":"undef","endLine":1,"endColumn":23},{"ruleId":"no-undef","severity":2,"message":"'require' is not defined.","line":2,"column":12,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":19}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const report = require(\"../reports/eslint-report.json\"); // Load the ESLint report\r\nconst fs = require(\"fs\");\r\n\r\n// Log the report data for verification\r\nconsole.log(\"DATA REPORT :::==\", report);\r\n\r\n// Convert the report to a string format (JSON)\r\nconst reportString = JSON.stringify(report, null, 2); // Pretty print with 2 spaces\r\n\r\n// Write the parsed report to a new file\r\nconst outputPath = \"./parsedOutput.js\"; // Define the output file path\r\nfs.writeFileSync(outputPath, reportString); // Write the string to the file\r\n","usedDeprecatedRules":[]},{"filePath":"D:\\fluxy\\eslint.config.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\fluxy\\frontend\\eslint.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\fluxy\\frontend\\postcss.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\fluxy\\frontend\\tailwind.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\fluxy\\index.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'require' is not defined.","line":2,"column":17,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":24},{"ruleId":"no-undef","severity":2,"message":"'module' is not defined.","line":6,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":7}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// index.js\r\nconst analyze = require(\"./lib/analyze\");\r\n// const lint = require(\"./lib/lint\");\r\n// const test = require(\"./lib/test\");\r\n\r\nmodule.exports = {\r\n  analyze,\r\n  //   lint,\r\n  //   test,\r\n};\r\n","usedDeprecatedRules":[]},{"filePath":"D:\\fluxy\\lib\\analyze.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'require' is not defined.","line":1,"column":22,"nodeType":"Identifier","messageId":"undef","endLine":1,"endColumn":29},{"ruleId":"no-undef","severity":2,"message":"'require' is not defined.","line":2,"column":14,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":21},{"ruleId":"no-undef","severity":2,"message":"'require' is not defined.","line":3,"column":28,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":35},{"ruleId":"no-undef","severity":2,"message":"'module' is not defined.","line":31,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":31,"endColumn":7}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const { execSync } = require(\"child_process\");\r\nconst path = require(\"path\");\r\nconst { getLinesOfCode } = require(\"./cloc\");\r\n\r\nconst analyze = async (projectPath) => {\r\n  try {\r\n    console.log(`Running ESLint analysis on ${projectPath}...`);\r\n    const absolutePath = path.resolve(projectPath); // Ensure the path is absolute\r\n\r\n    // Change directory to the project path and run npm run lint\r\n    execSync(`cd ${absolutePath} && npm run lint`, {\r\n      stdio: \"inherit\",\r\n      shell: true,\r\n    });\r\n\r\n    console.log(\"ESLint analysis completed and report generated.\");\r\n  } catch (error) {\r\n    // Check if the error is due to a non-zero exit code from ESLint\r\n    if (error.status === 1) {\r\n      console.warn(\"ESLint found issues, but the analysis completed.\");\r\n\r\n      // Counting number of lines of code in project\r\n      await getLinesOfCode(projectPath);\r\n      // Optionally, you can log the error message or any other details if needed\r\n    } else {\r\n      console.error(\"Error running analysis: \", error.message);\r\n    }\r\n  }\r\n};\r\n\r\nmodule.exports = analyze;\r\n","usedDeprecatedRules":[]},{"filePath":"D:\\fluxy\\lib\\cloc.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'require' is not defined.","line":1,"column":22,"nodeType":"Identifier","messageId":"undef","endLine":1,"endColumn":29},{"ruleId":"no-undef","severity":2,"message":"'require' is not defined.","line":2,"column":12,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":19},{"ruleId":"no-undef","severity":2,"message":"'require' is not defined.","line":3,"column":14,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":21},{"ruleId":"no-undef","severity":2,"message":"'require' is not defined.","line":4,"column":27,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":34},{"ruleId":"no-undef","severity":2,"message":"'__dirname' is not defined.","line":10,"column":39,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":48},{"ruleId":"no-undef","severity":2,"message":"'__dirname' is not defined.","line":16,"column":17,"nodeType":"Identifier","messageId":"undef","endLine":16,"endColumn":26},{"ruleId":"no-undef","severity":2,"message":"'module' is not defined.","line":26,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":26,"endColumn":7}],"suppressedMessages":[],"errorCount":7,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const { execSync } = require(\"child_process\");\r\nconst fs = require(\"fs\");\r\nconst path = require(\"path\");\r\nconst { createSpinner } = require(\"./spinner\");\r\n\r\nconst getLinesOfCode = (projectPath) => {\r\n  console.log(\"Counting line of codes... on path:\", projectPath);\r\n  const spinner = createSpinner();\r\n  try {\r\n    const excludeListPath = path.join(__dirname, \"../exclude-list.txt\");\r\n\r\n    const result = execSync(\r\n      `npx cloc ${projectPath} --exclude-dir=node_modules --exclude-list-file=${excludeListPath} --json`\r\n    );\r\n    fs.writeFileSync(\r\n      path.join(__dirname, \"../reports/line-of-code.json\"),\r\n      result\r\n    );\r\n  } catch (error) {\r\n    throw new Error(`Error while counting lines of code... ${error}`);\r\n  } finally {\r\n    spinner.stop();\r\n  }\r\n};\r\n\r\nmodule.exports = { getLinesOfCode };\r\n","usedDeprecatedRules":[]},{"filePath":"D:\\fluxy\\lib\\madge.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\fluxy\\lib\\server.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'require' is not defined.","line":1,"column":17,"nodeType":"Identifier","messageId":"undef","endLine":1,"endColumn":24},{"ruleId":"no-undef","severity":2,"message":"'require' is not defined.","line":2,"column":14,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":21},{"ruleId":"no-undef","severity":2,"message":"'__dirname' is not defined.","line":7,"column":36,"nodeType":"Identifier","messageId":"undef","endLine":7,"endColumn":45},{"ruleId":"no-undef","severity":2,"message":"'__dirname' is not defined.","line":10,"column":28,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":37},{"ruleId":"no-undef","severity":2,"message":"'module' is not defined.","line":18,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":18,"endColumn":7}],"suppressedMessages":[],"errorCount":5,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const express = require(\"express\");\r\nconst path = require(\"path\");\r\n\r\nconst serveDashboard = (port) => {\r\n  const app = express();\r\n\r\n  app.use(express.static(path.join(__dirname, \"../frontend/build\")));\r\n\r\n  app.get(\"*\", (req, res) => {\r\n    res.sendFile(path.join(__dirname, \"../frontend/build\", \"index.html\"));\r\n  });\r\n\r\n  app.listen(port, () => {\r\n    console.log(`Dashboard is running on http://localhost:${port}`);\r\n  });\r\n};\r\n\r\nmodule.exports = { serveDashboard };\r\n","usedDeprecatedRules":[]},{"filePath":"D:\\fluxy\\lib\\spinner.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'process' is not defined.","line":6,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":12},{"ruleId":"no-undef","severity":2,"message":"'process' is not defined.","line":13,"column":7,"nodeType":"Identifier","messageId":"undef","endLine":13,"endColumn":14},{"ruleId":"no-undef","severity":2,"message":"'module' is not defined.","line":18,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":18,"endColumn":7}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function createSpinner() {\r\n  const spinnerChars = [\"|\", \"/\", \"-\", \"\\\\\"];\r\n  let currentChar = 0;\r\n\r\n  const spinnerInterval = setInterval(() => {\r\n    process.stdout.write(`\\rLoading... ${spinnerChars[currentChar]}`);\r\n    currentChar = (currentChar + 1) % spinnerChars.length;\r\n  }, 100);\r\n\r\n  return {\r\n    stop: () => {\r\n      clearInterval(spinnerInterval);\r\n      process.stdout.write(\"\\rDone!          \\n\"); // Clear the line\r\n    },\r\n  };\r\n}\r\n\r\nmodule.exports = { createSpinner };\r\n","usedDeprecatedRules":[]}]